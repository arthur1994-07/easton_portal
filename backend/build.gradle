plugins {
    id 'org.springframework.boot' version '2.7.2'
    id 'io.spring.dependency-management' version '1.0.12.RELEASE'
    id 'java'
}

group = 'com.common.easton_portal'
version = '0.0.1'

def localLibPath = "$projectDir/../lib"
def withProject = { projectName ->
    dependencies {
        if (findProject(":${projectName}") != null) {
            implementation project(":${projectName}")
        } else {
            implementation "com.common:${projectName}"
        }
    }
}


def achieveName = 'easton_portal'

repositories {
    mavenCentral()
    flatDir {
        dirs localLibPath
    }
}

ext {
    set('springCloudVersion', "Hoxton.SR7")
}

dependencies {
    withProject('common-base')
    withProject('common-network')
    withProject('common-web')

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.retry:spring-retry'
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.9'

    implementation 'javax.validation:validation-api'
    implementation 'com.auth0:java-jwt:4.2.1'

    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'org.postgresql:postgresql'
    compileOnly 'org.projectlombok:lombok'

    annotationProcessor 'org.projectlombok:lombok'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.withType(Jar) {
    archivesBaseName = achieveName
}

test {
    useJUnitPlatform()
}